################################################################################
# Creality K2 macros for better ORCA Sliser compatibility and other improvements
# Based on ideas: https://github.com/jamincollins great thanks!
# GPL-3.0 license 
# Author: Mikhail Ivanov masluf@gmail.com

[respond]

[extruder]
min_extrude_temp: 0

[save_variables]
filename: ./mnt/UDISK/printer_data/config/custom/custom_vars.cfg

[delayed_gcode INIT_VARS_CFG]
initial_duration: 10
gcode:
    {% set svv = printer.save_variables.variables %}
    {% if svv.tool is not defined %}
        SAVE_VARIABLE VARIABLE=tool VALUE=-1
        SAVE_VARIABLE VARIABLE=temp VALUE=240
        SAVE_VARIABLE VARIABLE=velocity VALUE=200 # (max_flowrate / 2.4) * 60
        SAVE_VARIABLE VARIABLE=filament_type VALUE=''
        SAVE_VARIABLE VARIABLE=addr VALUE=1
        SAVE_VARIABLE VARIABLE=num VALUE='"A"'
    {% endif %}

[gcode_macro _PURGE_AND_CLEAN]
gcode:
    {% set temp = params.TEMP|default(240)|int %}
    {% set velocity = params.VELOCITY|default(200)|float %}
    # SAVE_GCODE_STATE NAME=purgeandclean
    BOX_GO_TO_EXTRUDE_POS
    # BOX_MATERIAL_FLUSH LEN=50 VELOCITY={velocity} TEMP={temp}
    RESPOND MSG="Purge temp:{temp} velocity:{velocity * 0.7}"
    {% if printer.extruder.target != temp %}
        # _CHANGE_EXTRUDER_TEMP TEMP={temp}
        # RESPOND MSG="Change temp: from {printer.extruder.target} to: {temp}"
        M83
        M109 S{temp}
        G1 E0.5 F60
        M400
        G1 E40 F{velocity * 0.7}
        M400
        G1 E40 F{velocity * 0.7}
    {% else %}
        M83
        # RESPOND MSG="Actual velocity: {velocity * 0.7}"
        G1 E40 F{velocity * 0.7}
        M400
        G1 E40 F{velocity * 0.7}
    {% endif %}
    BOX_BLOW
    M400
    # G4 P200
    _GO_CLEAN
    # RESTORE_GCODE_STATE NAME=purgeandclean

[gcode_macro _PURGE_AND_GO]
gcode:
    {% set temp = params.TEMP|default(240)|int %}
    {% set velocity = params.VELOCITY|default(200)|float %}
    # SAVE_GCODE_STATE NAME=purgeandgo
    BOX_GO_TO_EXTRUDE_POS
    # BOX_MATERIAL_FLUSH LEN=50 VELOCITY={velocity} TEMP={temp}
    RESPOND MSG="Purge temp:{temp} velocity:{velocity * 0.4}"
    M83
    G1 E60 F{velocity * 0.4}
    G1 E10 F{velocity * 0.2}
    _GO_TO_PLATE
    # RESTORE_GCODE_STATE NAME=purgeandgo

[gcode_macro _GO_CLEAN]
gcode:
    # SAVE_GCODE_STATE NAME=goclean
    G91
    G1 X32 F14000

    G1 Y-4 
    G1 Y6 
    G1 Y-6 
    G1 Y6 
    G1 Y-6 
    G1 Y6 
    G1 Y-2
    # G1 Y6

    G1 X-32 
    G1 X32
    G1 X-32 
    G1 X32
    G1 X-32
    G90
    # RESTORE_GCODE_STATE NAME=goclean
    
[gcode_macro _GO_TO_PLATE]
gcode:
    # SAVE_GCODE_STATE NAME=gotoplate
    G91
    G1 X19 F14000
    G90
    # RESTORE_GCODE_STATE NAME=gotoplate

# T[initial_no_support_extruder] TEMP=[first_layer_temperature] MAX_FLOWRATE=[filament_max_volumetric_speed]  FILAMENT_TYPE=[filament_type]
[gcode_macro _STAGE5]
variable_sensor_state: False
gcode:
    {% if printer['filament_switch_sensor filament_sensor'].filament_detected == False %}
        # RESPOND MSG="Stage 5"
        BOX_SEND_DATA ADDR={params.ADDR} CMD=16 DATA="{params.NUM_BYTE}50" TIMEOUT=15
        G4 P100
    {% else %}
        # RESPOND MSG="Stage 6"
        BOX_SEND_DATA ADDR={params.ADDR} CMD=16 DATA="{params.NUM_BYTE}60" TIMEOUT=15
    {% endif %}

[gcode_macro _CFS_LOAD]
gcode:
    {% set ADDR = params.ADDR|default(1)|int %}
    {% set NUM_BYTE = params.NUM_BYTE|default("1")|string %}
    {% set NUM = params.NUM|default("A")|string %}
    {% set TNN = params.TNN|default("T1A")|string %}
    # load
    # BOX_EXTRUDE_MATERIAL TNN={TNN}
    ##------------------------------
    BOX_TIGHTEN_UP_ENABLE addr={ADDR} enable="DISABLE"
    #For more info: https://docs.google.com/spreadsheets/d/16-dBGIGJ-zMNRc8hM-vnQLuDPJgmWSqQlyrfId-jeRs/edit?gid=891288709#gid=891288709&range=B1
    BOX_SEND_DATA ADDR={ADDR} CMD=16 DATA="{NUM_BYTE}00" TIMEOUT=15
    BOX_SEND_DATA ADDR={ADDR} CMD=16 DATA="{NUM_BYTE}00" TIMEOUT=15
    G4 P2000
    BOX_DISABLE_HEART_PROCESS TNN={TNN}
    # BOX_EXTRUDE_PROCESS ADDR={ADDR} NUM={NUM} STAGE=4
    BOX_SEND_DATA ADDR={ADDR} CMD=16 DATA="{NUM_BYTE}40" TIMEOUT=15
    G4 P500
    {% for index in range(60) %}
        _STAGE5 ADDR={ADDR} NUM_BYTE={NUM_BYTE}
    {% endfor %}
    BOX_SEND_DATA ADDR={ADDR} CMD=16 DATA="{NUM_BYTE}60" TIMEOUT=15
    G4 P1000
    BOX_SEND_DATA ADDR={ADDR} CMD=16 DATA="{NUM_BYTE}75" TIMEOUT=15
    BOX_ENABLE_HEART_PROCESS TNN={TNN}
    BOX_SET_BOX_MODE ADDR={ADDR} MODE="PRINT" NUM={NUM}
    BOX_TIGHTEN_UP_ENABLE addr={ADDR} enable="ENABLE"
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    ##------------------------------
[gcode_macro _CFS_UNLOAD]
gcode:
    {% set ADDR = params.ADDR|default(1)|int %}
    {% set NUM = params.NUM|default("A")|string %}
    {% set VELOCITY = params.VELOCITY|default(60)|float %}
     # Cut previous filament
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
    BOX_MOVE_TO_CUT
    BOX_GO_TO_EXTRUDE_POS
    # unload
    G91
    G1 E-10 F{VELOCITY*0.7}
    G1 E-10 F{VELOCITY}
    M400
    G1 E-15 F{VELOCITY}
    G90
    # BOX_RETRUDE_MATERIAL
    BOX_SET_BOX_MODE ADDR={ADDR} MODE="IDLE"
    BOX_RETRUDE_PROCESS ADDR={ADDR} NUM={NUM} TRIGGER="BUFFER"
    BOX_RETRUDE_PROCESS ADDR={ADDR} NUM={NUM} TRIGGER="MATERIAL"


[gcode_macro TOOLCHANGE]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    SAVE_GCODE_STATE NAME=myMoveState
    {% set svv = printer.save_variables.variables %}

    {% set prev_tool = svv.tool|default(0)|int %}
    {% set prev_temp = svv.temp|default(240)|int %}
    {% set prev_addr = svv.addr|default(1)|int%}
    {% set prev_num = svv.num %}
    {% set prev_velocity = svv.velocity|default(200.0)|float %}
    {% set prev_filament_type = svv.filament_type %}

    RESPOND MSG="prev_tool: {prev_tool}, prev_temp: {prev_temp}, prev_velocity: {prev_velocity}, prev_filament_type: {prev_filament_type}"

    {% set tool = params.TOOL|default(0)|int %}
    {% set temp = params.TEMP|default(240)|int %}
    {% set velocity = params.MAX_FLOWRATE|default(2.0)|float %}
    {% set velocity = (velocity / 2.4) * 60 %}
    {% set filament_type = params.FILAMENT_TYPE|default("PLA")|string %}

    RESPOND MSG="tool: {tool}, temp: {temp}, velocity: {velocity}, filament_type: {filament_type}"
    
    {% set box1 = printer['box'].T1['state'] %}
    {% set box2 = printer['box'].T2['state'] %}
    {% set box3 = printer['box'].T3['state'] %}
    {% set box4 = printer['box'].T4['state'] %}
    {% set connected_box_count = 0 %}

    {% if box4 == 'connect' %}
        {% set connected_box_count = 4 %}
    {% elif box3 == 'connect' %}
        {% set connected_box_count = 3 %}
    {% elif box2 == 'connect' %}
        {% set connected_box_count = 2 %}
    {% elif box1 == 'connect' %}
        {% set connected_box_count = 1 %}
    {% endif %}

    {% set TNN = 'T' %}
    {% set ADDR = 1 %}
    {% set NUM = 'A' %}
    {% set NUM_BYTE = 1 %}

    #     TNN += ((tool|3)>>2)+1;
    {% if tool < 4 %}
        {% set TNN = TNN+'1' %}
    {% elif tool < 8 %}
        {% set TNN = TNN+'2' %}
        {% set ADDR = 2 %}
    {% elif tool < 12 %}
        {% set TNN = TNN+'3' %}
        {% set ADDR = 3 %}
    {% else %}
        {% set TNN = TNN+'4' %}
        {% set ADDR = 4 %}
    {% endif %}

    {% if tool % 4 == 0 %}
        {% set TNN = TNN+'A' %}
    {% elif tool % 4 == 1 %}
        {% set TNN = TNN+'B' %}
        {% set NUM = 'B' %}
        {% set NUM_BYTE = 2 %}
    {% elif tool % 4 == 2 %}
        {% set TNN = TNN+'C' %}
        {% set NUM = 'C' %}
        {% set NUM_BYTE = 4 %}
    {% else %}
        {% set TNN = TNN+'D' %}
        {% set NUM = 'D' %}
        {% set NUM_BYTE = 8 %}
    {% endif %}

    RESPOND MSG="tool: {tool}, prevTool: {prev_tool}, TNN: {TNN}, boxCount: {connected_box_count}"

    {% if tool == 17 %}
        T17
    {% else %}
    # Spoolholder process
        {% if (connected_box_count == 4 and tool == 16) or (connected_box_count == 2 and tool >= 12) or (connected_box_count == 2 and tool >= 8) or (connected_box_count == 1 and tool >= 4) %}
            RESPOND MSG="Spoolholder process"
            {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True and (prev_tool >= tool or prev_tool == -1) %}
                RESPOND MSG="Start print from Spoolholder"
                BOX_ENABLE_CFS_PRINT ENABLE=0
                SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
                # extra purge for different filament
                {% if prev_temp != temp or prev_filament_type != filament_type %}
                    _PURGE_AND_CLEAN VELOCITY={prev_velocity} TEMP={prev_temp}
                    _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={temp}
                {% endif %}
                # purge
                _PURGE_AND_GO VELOCITY={velocity} TEMP={temp}
                SAVE_VARIABLE VARIABLE=tool VALUE={tool}
                SAVE_VARIABLE VARIABLE=temp VALUE={temp}
                SAVE_VARIABLE VARIABLE=addr VALUE={ADDR}
                SAVE_VARIABLE VARIABLE=num VALUE='"{NUM}"'
                SAVE_VARIABLE VARIABLE=velocity VALUE={velocity} 
                SAVE_VARIABLE VARIABLE=filament_type VALUE='"{filament_type}"'
            {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == True and prev_tool < connected_box_count * 4 %}
                RESPOND MSG="CFS Tool in toolhead but you try print from spoolholder. Retrude CFS Tool, load spoolholder filament and restart print"
                # Cut previous filament
                SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
                BOX_CUT_MATERIAL
                BOX_GO_TO_EXTRUDE_POS
                # unload
                BOX_RETRUDE_MATERIAL
                CANCEL_PRINT
            {% else %}
                RESPOND MSG="Toolhead is empty, and you try print from spoolholder. Load spoolholder filament and restart print"
                CANCEL_PRINT
            {% endif %}
    # CFS Process
        {% else %}
            RESPOND MSG="CFS process"
        # Use same tool again
            {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True and prev_tool == tool %}
                RESPOND MSG="CFS Ready to print {TNN}"
                BOX_SET_BOX_MODE ADDR={ADDR} MODE='PRINT' NUM={NUM}
                # purge
                _PURGE_AND_GO VELOCITY={velocity} TEMP={temp}
                SAVE_VARIABLE VARIABLE=tool VALUE={tool}
                SAVE_VARIABLE VARIABLE=temp VALUE={temp}
                SAVE_VARIABLE VARIABLE=addr VALUE={ADDR}
                SAVE_VARIABLE VARIABLE=num VALUE='"{NUM}"'
                SAVE_VARIABLE VARIABLE=velocity VALUE={velocity} 
                SAVE_VARIABLE VARIABLE=filament_type VALUE='"{filament_type}"'
                # Start printing
        # Use another tool from CFS, but Spoolholder tool inserted
            {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == True and (prev_tool >= connected_box_count*4) %}
                RESPOND MSG="Spoolholder Tool in toolhead but you try print from CFS. Retrude spoolholder Tool and restart print"
                 # Cut previous filament
                BOX_MOVE_TO_CUT
                BOX_GO_TO_EXTRUDE_POS
                # unload
                G91
                G1 E-25 F{prev_velocity}
                M400
                G90
                CANCEL_PRINT
        # Use another tool from CFS
            {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == True and (prev_tool != tool and prev_tool != -1) %}
                RESPOND MSG="CFS Toolchange, tool: {tool}, prevTool: {prev_tool}"
                _CFS_UNLOAD ADDR={prev_addr} NUM={prev_num} VELOCITY={prev_velocity}
                # load
                _CFS_LOAD ADDR={ADDR} NUM_BYTE={NUM_BYTE} TNN={TNN} NUM={NUM}
                SAVE_VARIABLE VARIABLE=tool VALUE={tool}
                SAVE_VARIABLE VARIABLE=temp VALUE={temp}
                SAVE_VARIABLE VARIABLE=addr VALUE={ADDR}
                SAVE_VARIABLE VARIABLE=num VALUE='"{NUM}"'
                SAVE_VARIABLE VARIABLE=velocity VALUE={velocity} 
                SAVE_VARIABLE VARIABLE=filament_type VALUE='"{filament_type}"'
                # Purge Old
                _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={prev_temp}
                _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={temp}
                # Purge new
                _PURGE_AND_GO VELOCITY={velocity} TEMP={temp}
                # Start printing
        # Old tool retruded and new tool need to be loading
            {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == False and (prev_tool != tool and prev_tool != -1) %}
                RESPOND MSG="Toolhead is empty. Previous tool from CFS, tool: {tool}, prevTool: {prev_tool}"
                # load
                _CFS_LOAD ADDR={ADDR} NUM_BYTE={NUM_BYTE} TNN={TNN} NUM={NUM}
                # Purge Old
                _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={prev_temp}
                _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={temp}
                # Purge new
                _PURGE_AND_GO VELOCITY={velocity} TEMP={temp}
                #save tools
                SAVE_VARIABLE VARIABLE=tool VALUE={tool}
                SAVE_VARIABLE VARIABLE=temp VALUE={temp}
                SAVE_VARIABLE VARIABLE=addr VALUE={ADDR}
                SAVE_VARIABLE VARIABLE=num VALUE='"{NUM}"'
                SAVE_VARIABLE VARIABLE=velocity VALUE={velocity} 
                SAVE_VARIABLE VARIABLE=filament_type VALUE='"{filament_type}"'
        # Old tool retruded and same tool need to be loading
            {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == False and (prev_tool == tool) %}
                RESPOND MSG="Toolhead is empty and same tool selected  {TNN}"
                # load
                _CFS_LOAD ADDR={ADDR} NUM_BYTE={NUM_BYTE} TNN={TNN} NUM={NUM}
                 # extra purge for different filament
                {% if prev_temp != temp or prev_filament_type != filament_type %}
                    _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={prev_temp}
                    _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={temp}
                {% endif %}
                # Purge new
                _PURGE_AND_GO VELOCITY={velocity} TEMP={temp}
                #save tools
                SAVE_VARIABLE VARIABLE=tool VALUE={tool}
                SAVE_VARIABLE VARIABLE=temp VALUE={temp}
                SAVE_VARIABLE VARIABLE=addr VALUE={ADDR}
                SAVE_VARIABLE VARIABLE=num VALUE='"{NUM}"'
                SAVE_VARIABLE VARIABLE=velocity VALUE={velocity} 
                SAVE_VARIABLE VARIABLE=filament_type VALUE='"{filament_type}"'
                # Start printing
        # Use new tool or first time use
            {% elif printer['filament_switch_sensor filament_sensor'].filament_detected == False and prev_tool == -1 %}
                RESPOND MSG="Toolhead is empty, start prepare  {TNN}"
                # load
                _CFS_LOAD ADDR={ADDR} NUM_BYTE={NUM_BYTE} TNN={TNN} NUM={NUM}
                # Purge new
                _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={temp}
                _PURGE_AND_CLEAN VELOCITY={velocity} TEMP={temp}
                _PURGE_AND_GO VELOCITY={velocity} TEMP={temp}
                #save tools
                SAVE_VARIABLE VARIABLE=tool VALUE={tool}
                SAVE_VARIABLE VARIABLE=temp VALUE={temp}
                SAVE_VARIABLE VARIABLE=addr VALUE={ADDR}
                SAVE_VARIABLE VARIABLE=num VALUE='"{NUM}"'
                SAVE_VARIABLE VARIABLE=velocity VALUE={velocity} 
                SAVE_VARIABLE VARIABLE=filament_type VALUE='"{filament_type}"'
                # Start printing
            {% endif %}
        ###################################
        {% endif %}
    {% endif %}
    RESTORE_GCODE_STATE NAME=myMoveState


[gcode_macro T17]
gcode:
    {% set svv = printer.save_variables.variables %}
    {% set tool = svv.tool %}
    {% set prev_velocity = svv.velocity|default(360)|int %}
    {% set prev_addr = svv.addr %}
    {% set prev_num = svv.num %}

    {% set box1 = printer['box'].T1['state'] %}
    {% set box2 = printer['box'].T2['state'] %}
    {% set box3 = printer['box'].T3['state'] %}
    {% set box4 = printer['box'].T4['state'] %}
    {% set connected_box_count = 0 %}

    {% if box4 == 'connect' %}
        {% set connected_box_count = 4 %}
    {% elif box3 == 'connect' %}
        {% set connected_box_count = 3 %}
    {% elif box2 == 'connect' %}
        {% set connected_box_count = 2 %}
    {% elif box1 == 'connect' %}
        {% set connected_box_count = 1 %}
    {% endif %}

    {% if printer['filament_switch_sensor filament_sensor'].filament_detected == True %}
        {% if "xyz" not in printer.toolhead.homed_axes %}
            G28
        {% endif %}
        {% if (connected_box_count == 4 and tool < 16) or (connected_box_count == 2 and tool < 12) or (connected_box_count == 2 and tool < 8) or (connected_box_count == 1 and tool < 4) %}
             RESPOND MSG="CFS Tool in toolhead. Unload: {prev_tool}"
            _CFS_UNLOAD ADDR={prev_addr} NUM={prev_num} VELOCITY={prev_velocity}
        {% else %}
            SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0
            BOX_MOVE_TO_CUT
            BOX_GO_TO_EXTRUDE_POS
            # unload
            G91
            G1 E-10 F{prev_velocity*0.7}
            G1 E-10 F{prev_velocity}
            M400
            G1 E-15 F{prev_velocity}
            G90
        {% endif %}
        BOX_NOZZLE_CLEAN
        SAVE_VARIABLE VARIABLE=tool VALUE=-1
    {% else %}
        RESPOND MSG="Toolhead is empty"
    {% endif %}

[gcode_macro END_PRINT]
gcode:
    # END_PRINT_BASE
    RESTORE_LIMITS
    M400
    G92 E0
    # BOX_END 
    # BOX_END_PRINT
    Qmode_exit
    EXCLUDE_OBJECT_RESET
    PRINT_PREPARE_CLEAR
    M220 S100
    SET_VELOCITY_LIMIT ACCEL=5000 ACCEL_TO_DECEL=5000
      # TURN_OFF_HEATERS
    {% if printer["output_pin DO_NOT_TURN_OFF_BED"].value|int == 1 %}
        M104 S0 #EXTRUDER
    {% else %}
        M140 S0 #BED
        M104 S0 #EXTRUDER
    {% endif%}
    # M107 P1
    M107 P2
    END_PRINT_POINT
    WAIT_TEMP_START
    M106 P0 S127
    # M141 S0
    SET_PIN PIN=extruder_fan VALUE=0
    BOX_NOZZLE_CLEAN

[gcode_macro T0]
rename_existing: T0.1
gcode:
    TOOLCHANGE TOOL=0 {rawparams}

[gcode_macro T1]
rename_existing: T1.1
gcode:
    TOOLCHANGE TOOL=1 {rawparams}

[gcode_macro T2]
rename_existing: T2.1
gcode:
    TOOLCHANGE TOOL=2 {rawparams}

[gcode_macro T3]
rename_existing: T3.1
gcode:
    TOOLCHANGE TOOL=3 {rawparams}

[gcode_macro T4]
rename_existing: T4.1
gcode:
    TOOLCHANGE TOOL=4 {rawparams}

[gcode_macro T5]
rename_existing: T5.1
gcode:
    TOOLCHANGE TOOL=5 {rawparams}

[gcode_macro T6]
rename_existing: T6.1
gcode:
    TOOLCHANGE TOOL=6 {rawparams}

[gcode_macro T7]
rename_existing: T7.1
gcode:
    TOOLCHANGE TOOL=7 {rawparams}

[gcode_macro T8]
rename_existing: T8.1
gcode:
    TOOLCHANGE TOOL=8 {rawparams}

[gcode_macro T9]
rename_existing: T9.1 
gcode:
    TOOLCHANGE TOOL=9 {rawparams}

[gcode_macro T10]
rename_existing: T10.1
gcode:
    TOOLCHANGE TOOL=10 {rawparams}

[gcode_macro T11]
rename_existing: T11.1
gcode:
    TOOLCHANGE TOOL=11 {rawparams}

[gcode_macro T12]
rename_existing: T12.1
gcode:
    TOOLCHANGE TOOL=12 {rawparams}

[gcode_macro T13]
rename_existing: T13.1
gcode:
    TOOLCHANGE TOOL=13 {rawparams}

[gcode_macro T14]
rename_existing: T14.1
gcode:
    TOOLCHANGE TOOL=14 {rawparams}

[gcode_macro T15]
rename_existing: T15.1
gcode:
    TOOLCHANGE TOOL=15 {rawparams}

[gcode_macro T16]
gcode:
    TOOLCHANGE TOOL=16 {rawparams}